<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Web Terminal with xterm.js</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xterm/css/xterm.css" />
  <style>
    body { margin: 0; background: #1e1e1e; color: #fff; }
    #terminal { height: 100vh; width: 100vw; }
  </style>
</head>
<body>
  <div id="terminal"></div>

  <script src="https://cdn.jsdelivr.net/npm/xterm/lib/xterm.js"></script>
  <script>
    const term = new Terminal();
    term.open(document.getElementById('terminal'));

    const userID = "student123";
    const ws = new WebSocket("ws://83.220.170.151:8765/terminal");

    let terminalReady = false;

    ws.onopen = () => {
      ws.send(JSON.stringify({ user_id: userID }));
    };

    ws.onmessage = (event) => {
      const data = event.data;

      // –ï—Å–ª–∏ —ç—Ç–æ JSON ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å
      try {
        const parsed = JSON.parse(data);
        if (parsed.status === "ready") {
          terminalReady = true;
          term.focus();
          return;
        }
      } catch (_) {}

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞: —É–±–∏—Ä–∞–µ–º –º—É—Å–æ—Ä
      const clean = stripAnsiArtifacts(data);
      term.write(clean);
    };

    term.onData((data) => {
      if (terminalReady) {
        ws.send(data);
      }
    });

    function stripAnsiArtifacts(text) {
      // –£–¥–∞–ª—è–µ–º OSC –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ESC ]0;... BEL)
      text = text.replace(/\x1b\]0;.*?\x07/g, '');

      // –£–¥–∞–ª—è–µ–º —Ä–µ–∂–∏–º bracketed paste (ESC[?2004h / ESC[?2004l)
      text = text.replace(/\x1b\[\?2004[hl]/g, '');

      return text;
    }

    ws.onclose = () => {
      term.write('\r\nüîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ\r\n');
    };

    ws.onerror = (err) => {
      term.write(`\r\n‚ùå WebSocket error: ${err.message || err}\r\n`);
    };
  </script>
</body>
</html>
