<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Web Terminal with xterm.js</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/xterm/css/xterm.css" />
  <style>
    body { margin: 0; background: #1e1e1e; color: #fff; display: flex; justify-content: center; align-items: center; height: 100vh; }
    #terminal-container {
      resize: both;
      overflow: auto;
      border: 2px solid #444;
      width: 800px;
      height: 500px;
      min-width: 300px;
      min-height: 200px;
    }
    #terminal {
      width: 100%;
      height: 100%;
    }
  </style>
</head>
<body>
  <div id="terminal-container">
    <div id="terminal"></div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/xterm/lib/xterm.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/xterm-addon-fit/lib/xterm-addon-fit.js"></script>
  <script>
    const term = new Terminal();
    const fitAddon = new FitAddon.FitAddon();
    term.loadAddon(fitAddon);

    term.open(document.getElementById('terminal'));
    fitAddon.fit(); // первый раз подогнать

    const userID = "student123";
    const ws = new WebSocket("ws://83.220.170.151:8765/terminal");

    let terminalReady = false;

    ws.onopen = () => {
      ws.send(JSON.stringify({ user_id: userID }));
    };

    ws.onmessage = (event) => {
      const data = event.data;

      try {
        const parsed = JSON.parse(data);
        if (parsed.status === "ready") {
          terminalReady = true;
          term.focus();
          return;
        }
      } catch (_) {}

      const clean = stripAnsiArtifacts(data);
      term.write(clean);
    };

    term.onData((data) => {
      if (terminalReady) {
        ws.send(data);
      }
    });

    function stripAnsiArtifacts(text) {
      text = text.replace(/\x1b\]0;.*?\x07/g, '');
      text = text.replace(/\x1b\[\?2004[hl]/g, '');
      return text;
    }

    ws.onclose = () => {
      term.write('\r\n🔒 Соединение закрыто\r\n');
    };

    ws.onerror = (err) => {
      term.write(`\r\n❌ WebSocket error: ${err.message || err}\r\n`);
    };

    // Автоматическая подгонка при изменении размеров
    const container = document.getElementById('terminal-container');
    const resizeObserver = new ResizeObserver(() => {
      fitAddon.fit();
    });
    resizeObserver.observe(container);
  </script>
</body>
</html>
